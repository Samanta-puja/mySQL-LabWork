Lab: Use the Student Management System Database and table from previous lab.Perform the following commands on the table Student and Enrollment.

1. Let's consider a scenario where you have a database tracking student enrollments and some students may not be enrolled in any courses.
Puja Samanta (StudentID: S01) is enrolled in courses with EnrollmentIDs E01.
Krisnhna Samanta (StudentID: S02) is enrolled in courses with EnrollmentIDs E02.
Prakash Samanta (StudentID: S03) is enrolled in courses with EnrollmentIDs E03.
Sulochana Samanta (StudentID: S04) is enrolled in courses with EnrollmentIDs E04.
Nabin Samanta (StudentID: S05) is enrolled in courses with EnrollmentIDs E05.
Purmi Samanta (StudentID: S06) is not enrolled in any courses.
Now,run RIGHT OUTER JOIN query to retrieve data.
_______________________________________________________________________________________________________________________________________________________________________

mysql> show databases;
+-----------------------------+
| Database                    |
+-----------------------------+
| bankaccountmanagementsystem |
| ecommerce                   |
| employeerecords             |
| information_schema          |
| mysql                       |
| performance_schema          |
| sakila                      |
| studentmanagementsystem     |
| sys                         |
| world                       |
+-----------------------------+
10 rows in set (0.16 sec)

mysql> use studentmanagementsystem;
Database changed
mysql> select * from Student;
+-----------+-----------+----------+-------------+--------+-----------------------+------------+
| StudentID | FirstName | LastName | DateOfBirth | Gender | Email                 | Phone      |
+-----------+-----------+----------+-------------+--------+-----------------------+------------+
| S01       | Puja      | Samanta  | 1999-04-19  | Female | puja@gmail.com        | 7076787314 |
| S02       | Krishna   | Samanta  | 1937-11-04  | Male   | batakrishna@gmail.com | 7679714073 |
| S03       | Prakash   | Samanta  | 1996-04-02  | Male   | prakash@gmail.com     | 7872423542 |
| S04       | Sulochana | Samanta  | 1977-03-18  | Female | sulochana@gmail.com   | 7797540846 |
| S05       | Nabin     | Samanta  | 1969-03-15  | Male   | nabin@gmail.com       | 7477885349 |
+-----------+-----------+----------+-------------+--------+-----------------------+------------+
5 rows in set (0.01 sec)

mysql> /* Inserting a new row into the Student table */
mysql> insert into Student values
    -> ('S06', 'Purmi', 'Samanta', '2000-01-01', 'female', 'purmi@gmail.com', 9876543210);
Query OK, 1 row affected (0.01 sec)

mysql> /* Retrieves all records from the 'student' table, displaying student information such as ID, first name, last name, date of birth, gender, email, and phone number */
mysql> select * from Student;
+-----------+-----------+----------+-------------+--------+-----------------------+------------+
| StudentID | FirstName | LastName | DateOfBirth | Gender | Email                 | Phone      |
+-----------+-----------+----------+-------------+--------+-----------------------+------------+
| S01       | Puja      | Samanta  | 1999-04-19  | Female | puja@gmail.com        | 7076787314 |
| S02       | Krishna   | Samanta  | 1937-11-04  | Male   | batakrishna@gmail.com | 7679714073 |
| S03       | Prakash   | Samanta  | 1996-04-02  | Male   | prakash@gmail.com     | 7872423542 |
| S04       | Sulochana | Samanta  | 1977-03-18  | Female | sulochana@gmail.com   | 7797540846 |
| S05       | Nabin     | Samanta  | 1969-03-15  | Male   | nabin@gmail.com       | 7477885349 |
| S06       | Purmi     | Samanta  | 2000-01-01  | female | purmi@gmail.com       | 9876543210 |
+-----------+-----------+----------+-------------+--------+-----------------------+------------+
6 rows in set (0.00 sec)

mysql> /* Retrieves all records from the 'enrollment' table, showing enrollment details including enrollment ID, date, student ID, course ID, and instructor ID */
mysql> select * from enrollment;
+--------------+----------------+-----------+----------+--------------+
| EnrollmentID | EnrollmentDate | StudentID | CourseID | InstructorID |
+--------------+----------------+-----------+----------+--------------+
| E01          | 2023-08-19     | S01       | C01      | I01          |
| E02          | 2023-09-19     | S02       | C02      | I02          |
| E03          | 2023-10-19     | S03       | C03      | I03          |
| E04          | 2023-11-19     | S04       | C04      | I04          |
| E05          | 2023-12-19     | S05       | C05      | I05          |
+--------------+----------------+-----------+----------+--------------+
5 rows in set (0.00 sec)

mysql> /* Retrieves student information and associated enrollment details using a RIGHT JOIN between the 'Enrollment' and 'Student' tables */
mysql> select s.StudentId,s.FirstName,s.LastName,e.enrollmentId,e.courseId
    -> from Enrollment e RIGHT JOIN Student s
    -> on s.StudentID = e.StudentID;
+-----------+-----------+----------+--------------+----------+
| StudentId | FirstName | LastName | enrollmentId | courseId |
+-----------+-----------+----------+--------------+----------+
| S01       | Puja      | Samanta  | E01          | C01      |
| S02       | Krishna   | Samanta  | E02          | C02      |
| S03       | Prakash   | Samanta  | E03          | C03      |
| S04       | Sulochana | Samanta  | E04          | C04      |
| S05       | Nabin     | Samanta  | E05          | C05      |
| S06       | Purmi     | Samanta  | NULL         | NULL     |
+-----------+-----------+----------+--------------+----------+
6 rows in set (0.00 sec)
________________________________________________________________________________________________________________________________________________________________________
Assume a university where students can enroll in various courses. Here are some fictional details:
Student Information:
Student with ID S01: Puja Samanta, email: puja@gmail.com
Student with ID S02: Krishna Samanta, email: batakrishna@gmail.com
Student with ID S03: Prakash Samanta, email: prakash@gmail.com
Student with ID S04: Sulochana Samanta, email: sulochana@gmail.com
Student with ID S05: Nabin Samanta, email: nabin@gmail.com 
Enrollment Information:
Enrollment with ID E01: Puja Samanta (StudentID: S01) enrolls in Data Visualization (CourseID: C01).
Enrollment with ID E02: Krishna Samanta (StudentID: S02) enrolls in Python (CourseID: C02).
Enrollment with ID E03: Prakash Samanta (StudentID: S03) enrolls in MySQL (CourseID: C03).
Enrollment with ID E04: Sulochana Samanta (StudentID: S04) enrolls in PowerBI (CourseID: C04).
Enrollment with ID E05: Nabin Samanta (StudentID: S05) enrolls in JAVA (CourseID: C05).
Now, write a LEFT JOIN query to retrieve the data


mysql> /*Retrieves information about enrolled students and their corresponding course titles*/
mysql> select * from Course;
+----------+--------------------+---------+
| CourseID | CourseTitle        | Credits |
+----------+--------------------+---------+
| C01      | Data Visualization |       7 |
| C02      | Python             |       9 |
| C03      | MySQL              |       6 |
| C04      | PowerBI            |       8 |
| C05      | JAVA               |       7 |
+----------+--------------------+---------+
5 rows in set (0.00 sec)

/* Retrieves information about students, their enrollments (if any), and the corresponding course titles.
Uses LEFT JOIN operations between the 'student', 'enrollment', and 'course' tables based on their respective IDs */

mysql> SELECT s.StudentID, s.FirstName, s.LastName, e.EnrollmentID, c.CourseTitle FROM student s
    -> LEFT JOIN enrollment e ON s.StudentID = e.StudentID
    -> LEFT JOIN course c ON e.CourseID = c.CourseID;
+-----------+-----------+----------+--------------+--------------------+
| StudentID | FirstName | LastName | EnrollmentID | CourseTiyle        |
+-----------+-----------+----------+--------------+--------------------+
| S01       | Puja      | Samanta  | E01          | Data Visualization |
| S02       | Krishna   | Samanta  | E02          | Python             |
| S03       | Prakash   | Samanta  | E03          | MySQL              |
| S04       | Sulochana | Samanta  | E04          | PowerBI            |
| S05       | Nabin     | Samanta  | E05          | JAVA               |
| S06       | Purmi     | Samanta  | NULL         | NULL               |
+-----------+-----------+----------+--------------+--------------------+
6 rows in set (0.00 sec)

